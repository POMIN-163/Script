'''
author: Pomin
date: 2022-05-25 11:44:53
github: https://github.com/POMIN-163
lastedit: 2022-05-26 10:46:25
description: image to rgb
'''
from PIL import Image
import sys
import numpy as np
import cv2

# Generated by https://quicktype.io

from typing import Any, TypeVar, Type, cast


T = TypeVar("T")


def from_int(x: Any) -> int:
    assert isinstance(x, int) and not isinstance(x, bool)
    return x


def to_class(c: Type[T], x: Any) -> dict:
    assert isinstance(x, c)
    return cast(Any, x).to_dict()


class Info:
    width: int
    height: int

    def __init__(self, width: int, height: int) -> None:
        self.width = width
        self.height = height

    @staticmethod
    def from_dict(obj: Any) -> 'Info':
        assert isinstance(obj, dict)
        width = from_int(obj.get("width"))
        height = from_int(obj.get("height"))
        return Info(width, height)

    def to_dict(self) -> dict:
        result: dict = {}
        result["width"] = from_int(self.width)
        result["height"] = from_int(self.height)
        return result


def info_from_dict(s: Any) -> Info:
    return Info.from_dict(s)


def info_to_dict(x: Info) -> Any:
    return to_class(Info, x)

# 参数获取
argc = len(sys.argv)
if argc < 3:
    print('please input img and rgb path eg: img2rgb [img] [rgb]')
    exit(1)

img_path = sys.argv[1]
rgb_path = sys.argv[2]

# 图片获取
img = Image.open(img_path)
info = Info(img.width, img.height)
print('w: ' + str(img.width) + '  h: ' + str(img.height))

# json 储存宽高
f = open(rgb_path + '.info', 'w')
f.write(str(info_to_dict(info)).replace('\'', '\"'))

# 转为 BGR 数组
img = img.convert("RGB")
img = np.array(img)

# BGR2RGB
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
f = open(rgb_path, 'w')
img.tofile(rgb_path)

cv2.imshow(rgb_path, img)
cv2.waitKey()



