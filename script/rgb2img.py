'''
author: Pomin
date: 2022-05-25 02:02:37
github: https://github.com/POMIN-163
lastedit: 2022-05-25 21:59:37
description: rgb to png
'''
from genericpath import exists
import cv2 as cv
import numpy as np
import sys
import json

# Generated by https://quicktype.io

from typing import Any, TypeVar, Type, cast


T = TypeVar("T")


def from_int(x: Any) -> int:
    assert isinstance(x, int) and not isinstance(x, bool)
    return x


def to_class(c: Type[T], x: Any) -> dict:
    assert isinstance(x, c)
    return cast(Any, x).to_dict()


class Info:
    width: int
    height: int

    def __init__(self, width: int, height: int) -> None:
        self.width = width
        self.height = height

    @staticmethod
    def from_dict(obj: Any) -> 'Info':
        assert isinstance(obj, dict)
        width = from_int(obj.get("width"))
        height = from_int(obj.get("height"))
        return Info(width, height)

    def to_dict(self) -> dict:
        result: dict = {}
        result["width"] = from_int(self.width)
        result["height"] = from_int(self.height)
        return result


def info_from_dict(s: Any) -> Info:
    return Info.from_dict(s)


def info_to_dict(x: Info) -> Any:
    return to_class(Info, x)

# 参数获取
argc = len(sys.argv)
if argc < 3:
    print('please input img and rgb path eg: rgb2png [rgb] [img] [width] [height]')
    exit(1)

rgb_path = sys.argv[1]
img_path = sys.argv[2]
info_path = rgb_path + '.info'
img_w = 0
img_h = 0

# 可传参宽高
if (argc > 4):
    img_w = sys.argv[3]
    img_h = sys.argv[4]

# info 即 json 文件中读取长宽
if exists(info_path):
    f = open(info_path, "rb")
    data = f.read()
    f.close()
    rgb_info = info_from_dict(json.loads(data))
    img_w = rgb_info.width
    img_h = rgb_info.height

if img_h == 0 or img_w == 0:
    print('no info file, please input img and rgb path eg: rgb2png [rgb] [img] [width] [height]')
    exit(2)
print('w: ' + str(img_w) + '  h: ' + str(img_h))

# 读 rgb
f = open(rgb_path, "rb")
data = f.read()
f.close()
data = [int(x) for x in data]
data = np.array(data).reshape((165, 600, 3)).astype(np.uint8)

# 转为 png
cv.imwrite(img_path, data)
cv.imshow(img_path, data)
cv.waitKey()



